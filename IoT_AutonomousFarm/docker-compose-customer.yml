version: '3.9'
services:
  mosquitto:
    image: eclipse-mosquitto:latest
    container_name: mosquitto_broker
    ports:
      - "1883:1883"    # MQTT port
      - "9001:9001"    # WebSocket port (optional)
    volumes:
      - ./mosquitto/config:/mosquitto/config
      - ./mosquitto/data:/mosquitto/data
      - ./mosquitto/log:/mosquitto/log
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "mosquitto_pub -h localhost -t test -m 'health-check' || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - customer-network

  deviceconnector:
    build: ./deviceConnector
    container_name: device_connector
    volumes:
      - ./deviceConnector:/app
    depends_on:
      mosquitto:
        condition: service_healthy
    networks:
      - customer-network

  dataanalysis:
    build: ./microservices/DataAnalysis
    container_name: data_analysis
    volumes:
      - ./microservices/DataAnalysis:/app
    depends_on:
      deviceconnector:
        condition: service_started
      mosquitto:
        condition: service_healthy
    networks:
      - customer-network

  humiditymanagement:
    build: ./microservices/HumidityManagement
    container_name: humidity_management
    volumes:
      - ./microservices/HumidityManagement:/app
    depends_on:
      deviceconnector:
        condition: service_started
      mosquitto:
        condition: service_healthy
    networks:
      - customer-network

  lightmanagement:
    build: ./microservices/LightManagement
    container_name: light_management
    volumes:
      - ./microservices/LightManagement:/app
    depends_on:
      deviceconnector:
        condition: service_started
      mosquitto:
        condition: service_healthy
    networks:
      - customer-network

  nutrientmanagement:
    build: ./microservices/NutrientManagement
    container_name: nutrient_management
    volumes:
      - ./microservices/NutrientManagement:/app
    depends_on:
      deviceconnector:
        condition: service_started
      mosquitto:
        condition: service_healthy
    networks:
      - customer-network

  timeshift:
    build: ./microservices/TimeShift
    container_name: time_shift
    volumes:
      - ./microservices/TimeShift:/app
    depends_on:
      deviceconnector:
        condition: service_started
      mosquitto:
        condition: service_healthy
    networks:
      - customer-network

  thingspeak:
    build: ./thingSpeakAdaptor
    container_name: thingspeak_adaptor
    volumes:
      - ./thingSpeakAdaptor:/app
    depends_on:
      deviceconnector:
        condition: service_started
      mosquitto:
        condition: service_healthy
    networks:
      - customer-network

networks:
  customer-network:
    driver: bridge
